// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PalMan.Agent.Database;

#nullable disable

namespace PalMan.Agent.Migrations
{
    [DbContext(typeof(PalManDbContext))]
    [Migration("20240125053616_Initialize")]
    partial class Initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("PalMan.Agent.Entities.ContainerEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ContainerEvents");
                });

            modelBuilder.Entity("PalMan.Agent.Entities.PalWorldServer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContainerId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Installed")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SettingsId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SettingsId");

                    b.ToTable("PalWorldServers");
                });

            modelBuilder.Entity("PalMan.Agent.Entities.PalWorldSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AdminPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("AutoResetGuildTimeNoOnlinePlayers")
                        .HasColumnType("REAL");

                    b.Property<string>("BanListURL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("BaseCampMaxNum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaseCampWorkerMaxNum")
                        .HasColumnType("INTEGER");

                    b.Property<float>("BuildObjectDamageRate")
                        .HasColumnType("REAL");

                    b.Property<float>("BuildObjectDeteriorationDamageRate")
                        .HasColumnType("REAL");

                    b.Property<float>("CollectionDropRate")
                        .HasColumnType("REAL");

                    b.Property<float>("CollectionObjectHpRate")
                        .HasColumnType("REAL");

                    b.Property<float>("CollectionObjectRespawnSpeedRate")
                        .HasColumnType("REAL");

                    b.Property<int>("CoopPlayerMaxNum")
                        .HasColumnType("INTEGER");

                    b.Property<float>("DayTimeSpeedRate")
                        .HasColumnType("REAL");

                    b.Property<string>("DeathPenalty")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("DropItemAliveMaxHours")
                        .HasColumnType("REAL");

                    b.Property<int>("DropItemMaxNum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DropItemMaxNum_UNKO")
                        .HasColumnType("INTEGER");

                    b.Property<float>("EnemyDropItemRate")
                        .HasColumnType("REAL");

                    b.Property<float>("ExpRate")
                        .HasColumnType("REAL");

                    b.Property<int>("GuildPlayerMaxNum")
                        .HasColumnType("INTEGER");

                    b.Property<float>("NightTimeSpeedRate")
                        .HasColumnType("REAL");

                    b.Property<float>("PalAutoHPRegeneRate")
                        .HasColumnType("REAL");

                    b.Property<float>("PalAutoHpRegeneRateInSleep")
                        .HasColumnType("REAL");

                    b.Property<float>("PalCaptureRate")
                        .HasColumnType("REAL");

                    b.Property<float>("PalDamageRateAttack")
                        .HasColumnType("REAL");

                    b.Property<float>("PalDamageRateDefense")
                        .HasColumnType("REAL");

                    b.Property<float>("PalEggDefaultHatchingTime")
                        .HasColumnType("REAL");

                    b.Property<float>("PalSpawnNumRate")
                        .HasColumnType("REAL");

                    b.Property<float>("PalStaminaDecreaceRate")
                        .HasColumnType("REAL");

                    b.Property<float>("PalStomachDecreaceRate")
                        .HasColumnType("REAL");

                    b.Property<float>("PlayerAutoHPRegeneRate")
                        .HasColumnType("REAL");

                    b.Property<float>("PlayerAutoHpRegeneRateInSleep")
                        .HasColumnType("REAL");

                    b.Property<float>("PlayerDamageRateAttack")
                        .HasColumnType("REAL");

                    b.Property<float>("PlayerDamageRateDefense")
                        .HasColumnType("REAL");

                    b.Property<float>("PlayerStomachDecreaceRate")
                        .HasColumnType("REAL");

                    b.Property<string>("PublicIP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PublicPort")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RCONEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RCONPort")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ServerPlayerMaxNum")
                        .HasColumnType("INTEGER");

                    b.Property<float>("WorkSpeedRate")
                        .HasColumnType("REAL");

                    b.Property<bool>("bActiveUNKO")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("bAutoResetGuildNoOnlinePlayers")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("bCanPickupOtherGuildDeathPenaltyDrop")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("bEnableAimAssistKeyboard")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("bEnableAimAssistPad")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("bEnableDefenseOtherGuildPlayer")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("bEnableFastTravel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("bEnableFriendlyFire")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("bEnableInvaderEnemy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("bEnableNonLoginPenalty")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("bEnablePlayerToPlayerDamage")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("bExistPlayerAfterLogout")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("bIsMultiplay")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("bIsPvP")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("bIsStartLocationSelectByMap")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("bUseAuth")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PalWorldSettings");
                });

            modelBuilder.Entity("PalMan.Agent.Entities.Token", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TokenValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("PalMan.Agent.Entities.PalWorldServer", b =>
                {
                    b.HasOne("PalMan.Agent.Entities.PalWorldSettings", "Settings")
                        .WithMany()
                        .HasForeignKey("SettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Settings");
                });
#pragma warning restore 612, 618
        }
    }
}

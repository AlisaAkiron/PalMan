// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PalMan.Agent.Database;

#nullable disable

namespace PalMan.Agent.Migrations
{
    [DbContext(typeof(PalManDbContext))]
    partial class PalManDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("PalMan.Agent.Entities.ContainerEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ContainerEvents");
                });

            modelBuilder.Entity("PalMan.Agent.Entities.PalWorldServer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContainerId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Installed")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SettingsId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SettingsId");

                    b.ToTable("PalWorldServers");
                });

            modelBuilder.Entity("PalMan.Agent.Entities.PalWorldSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AdminPassword")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("AdminPassword");

                    b.Property<float>("AutoResetGuildTimeNoOnlinePlayers")
                        .HasColumnType("REAL")
                        .HasColumnName("AutoResetGuildTimeNoOnlinePlayers");

                    b.Property<string>("BanListURL")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("BanListURL");

                    b.Property<int>("BaseCampMaxNum")
                        .HasColumnType("INTEGER")
                        .HasColumnName("BaseCampMaxNum");

                    b.Property<int>("BaseCampWorkerMaxNum")
                        .HasColumnType("INTEGER")
                        .HasColumnName("BaseCampWorkerMaxNum");

                    b.Property<float>("BuildObjectDamageRate")
                        .HasColumnType("REAL")
                        .HasColumnName("BuildObjectDamageRate");

                    b.Property<float>("BuildObjectDeteriorationDamageRate")
                        .HasColumnType("REAL")
                        .HasColumnName("BuildObjectDeteriorationDamageRate");

                    b.Property<float>("CollectionDropRate")
                        .HasColumnType("REAL")
                        .HasColumnName("CollectionDropRate");

                    b.Property<float>("CollectionObjectHpRate")
                        .HasColumnType("REAL")
                        .HasColumnName("CollectionObjectHPRate");

                    b.Property<float>("CollectionObjectRespawnSpeedRate")
                        .HasColumnType("REAL")
                        .HasColumnName("CollectionObjectRespawnSpeedRate");

                    b.Property<int>("CoopPlayerMaxNum")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CoopPlayerMaxNum");

                    b.Property<float>("DayTimeSpeedRate")
                        .HasColumnType("REAL")
                        .HasColumnName("DayTimeSpeedRate");

                    b.Property<string>("DeathPenalty")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("DeathPenalty");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Difficulty");

                    b.Property<float>("DropItemAliveMaxHours")
                        .HasColumnType("REAL")
                        .HasColumnName("DropItemAliveMaxHours");

                    b.Property<int>("DropItemMaxNum")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DropItemMaxNum");

                    b.Property<int>("DropItemMaxNum_UNKO")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DropItemMaxNum_UNKO");

                    b.Property<float>("EnemyDropItemRate")
                        .HasColumnType("REAL")
                        .HasColumnName("EnemyDropItemRate");

                    b.Property<float>("ExpRate")
                        .HasColumnType("REAL")
                        .HasColumnName("ExpRate");

                    b.Property<int>("GuildPlayerMaxNum")
                        .HasColumnType("INTEGER")
                        .HasColumnName("GuildPlayerMaxNum");

                    b.Property<float>("NightTimeSpeedRate")
                        .HasColumnType("REAL")
                        .HasColumnName("NightTimeSpeedRate");

                    b.Property<float>("PalAutoHPRegeneRate")
                        .HasColumnType("REAL")
                        .HasColumnName("PalAutoHPRegenerationRate");

                    b.Property<float>("PalAutoHpRegeneRateInSleep")
                        .HasColumnType("REAL")
                        .HasColumnName("PalAutoHPRegenerationRateInSleep");

                    b.Property<float>("PalCaptureRate")
                        .HasColumnType("REAL")
                        .HasColumnName("PalCaptureRate");

                    b.Property<float>("PalDamageRateAttack")
                        .HasColumnType("REAL")
                        .HasColumnName("PalDamageRateAttack");

                    b.Property<float>("PalDamageRateDefense")
                        .HasColumnType("REAL")
                        .HasColumnName("PalDamageRateDefense");

                    b.Property<float>("PalEggDefaultHatchingTime")
                        .HasColumnType("REAL")
                        .HasColumnName("PalEggDefaultHatchingTime");

                    b.Property<float>("PalSpawnNumRate")
                        .HasColumnType("REAL")
                        .HasColumnName("PalSpawnNumRate");

                    b.Property<float>("PalStaminaDecreaceRate")
                        .HasColumnType("REAL")
                        .HasColumnName("PalStaminaDecreaseRate");

                    b.Property<float>("PalStomachDecreaceRate")
                        .HasColumnType("REAL")
                        .HasColumnName("PalStomachDecreaseRate");

                    b.Property<float>("PlayerAutoHPRegeneRate")
                        .HasColumnType("REAL")
                        .HasColumnName("PlayerAutoHPRegenerationRate");

                    b.Property<float>("PlayerAutoHpRegeneRateInSleep")
                        .HasColumnType("REAL")
                        .HasColumnName("PlayerAutoHPRegenerationRateInSleep");

                    b.Property<float>("PlayerDamageRateAttack")
                        .HasColumnType("REAL")
                        .HasColumnName("PlayerDamageRateAttack");

                    b.Property<float>("PlayerDamageRateDefense")
                        .HasColumnType("REAL")
                        .HasColumnName("PlayerDamageRateDefense");

                    b.Property<float>("PlayerStaminaDecreaceRate")
                        .HasColumnType("REAL")
                        .HasColumnName("PlayerStaminaDecreaseRate");

                    b.Property<float>("PlayerStomachDecreaceRate")
                        .HasColumnType("REAL")
                        .HasColumnName("PlayerStomachDecreaseRate");

                    b.Property<string>("PublicIP")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("PublicIP");

                    b.Property<int>("PublicPort")
                        .HasColumnType("INTEGER")
                        .HasColumnName("PublicPort");

                    b.Property<bool>("RCONEnabled")
                        .HasColumnType("INTEGER")
                        .HasColumnName("RCONEnabled");

                    b.Property<int>("RCONPort")
                        .HasColumnType("INTEGER")
                        .HasColumnName("RCONPort");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Region");

                    b.Property<string>("ServerDescription")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ServerDescription");

                    b.Property<string>("ServerName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ServerName");

                    b.Property<string>("ServerPassword")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ServerPassword");

                    b.Property<int>("ServerPlayerMaxNum")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ServerPlayerMaxNum");

                    b.Property<float>("WorkSpeedRate")
                        .HasColumnType("REAL")
                        .HasColumnName("WorkSpeedRate");

                    b.Property<bool>("bActiveUNKO")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ActiveUNKO");

                    b.Property<bool>("bAutoResetGuildNoOnlinePlayers")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AutoResetGuildNoOnlinePlayers");

                    b.Property<bool>("bCanPickupOtherGuildDeathPenaltyDrop")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CanPickupOtherGuildDeathPenaltyDrop");

                    b.Property<bool>("bEnableAimAssistKeyboard")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EnableAimAssistKeyboard");

                    b.Property<bool>("bEnableAimAssistPad")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EnableAimAssistPad");

                    b.Property<bool>("bEnableDefenseOtherGuildPlayer")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EnableDefenseOtherGuildPlayer");

                    b.Property<bool>("bEnableFastTravel")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EnableFastTravel");

                    b.Property<bool>("bEnableFriendlyFire")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EnableFriendlyFire");

                    b.Property<bool>("bEnableInvaderEnemy")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EnableInvaderEnemy");

                    b.Property<bool>("bEnableNonLoginPenalty")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EnableNonLoginPenalty");

                    b.Property<bool>("bEnablePlayerToPlayerDamage")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EnablePlayerToPlayerDamage");

                    b.Property<bool>("bExistPlayerAfterLogout")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ExistPlayerAfterLogout");

                    b.Property<bool>("bIsMultiplay")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsMultiplayer");

                    b.Property<bool>("bIsPvP")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsPvP");

                    b.Property<bool>("bIsStartLocationSelectByMap")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsStartLocationSelectByMap");

                    b.Property<bool>("bUseAuth")
                        .HasColumnType("INTEGER")
                        .HasColumnName("UseAuth");

                    b.HasKey("Id");

                    b.ToTable("PalWorldSettings");
                });

            modelBuilder.Entity("PalMan.Agent.Entities.Token", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TokenValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("PalMan.Agent.Entities.PalWorldServer", b =>
                {
                    b.HasOne("PalMan.Agent.Entities.PalWorldSettings", "Settings")
                        .WithMany()
                        .HasForeignKey("SettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Settings");
                });
#pragma warning restore 612, 618
        }
    }
}
